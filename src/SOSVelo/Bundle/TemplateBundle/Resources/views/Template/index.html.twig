{# SOSVelo/Bundle/TemplateBundle/Resources/views/Template/index.html.twig #}

{% extends '@SOSVeloTemplate/layout.html.twig' %}

{% block title %}SOSVelo !{% endblock %}

{% block stylesheets %}
    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.css"/>
    <script src="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.js"></script>
    <script src="http://www.mapquestapi.com/sdk/leaflet/v1.s/mq-map.js?key=Fmjtd%7Cluur2902nu%2C22%3Do5-90805z"></script>
    <script src="http://www.mapquestapi.com/sdk/leaflet/v1.s/mq-routing.js?key=Fmjtd%7Cluur2902nu%2C22%3Do5-90805z"></script>
    <script src="http://127.0.0.1:8888/web/app_dev.php/geojson/points"></script>
{% endblock %}


{% block noscriptstylesheets %}
    {{ parent() }}
{% endblock %}

{% block body %}
    {% block menu %}
        {{ parent() }}
    {% endblock %}
    <!-- Banner -->
    <section id="banner">
        <h2>SOSVélo</h2>

        <p>Vous trouvez ici toutes les informations de points SOSVélo</p>

        <form>
            <div class="row uniform 50%">
                <div class="5u -3u 12u(3) align-center">
                    <input type="text" name="search" id="search" placeholder="Rechercher votre point"/>
                </div>
                <div class="1u 4u(3) align-center">
                    <input type="submit" value="Search" class="fit"/>
                </div>
            </div>
        </form>

        <div class="row uniform 0%">
            <div class="8u -1u 12u(2)">
                <div id="map" class="map" style="height: 500px"></div>
            </div>
            <div class="6u 2u$ 12u(2)">
                <p>asdasdasd</p>
            </div>

            <div class="12u -1u 10u$ owl-carousel">
                <img class="owl-lazy" data-src="http://placehold.it/350x250&text=1"
                     data-src-retina="http://placehold.it/350x250&text=1-retina" alt="">
                <img class="owl-lazy" data-src="http://placehold.it/350x250&text=2"
                     data-src-retina="http://placehold.it/350x250&text=2-retina" alt="">
                <img class="owl-lazy" data-src="http://placehold.it/350x250&text=3" alt="">
                <img class="owl-lazy" data-src="http://placehold.it/350x250&text=4" alt="">
                <img class="owl-lazy" data-src="http://placehold.it/350x250&text=5" alt="">
                <img class="owl-lazy" data-src="http://placehold.it/350x250&text=6" alt="">
                <img class="owl-lazy" data-src="http://placehold.it/350x250&text=7" alt="">
                <img class="owl-lazy" data-src="http://placehold.it/350x250&text=8" alt="">
                <img class="owl-lazy" data-src="http://placehold.it/350x250&text=9" alt="">
                <img class="owl-lazy" data-src="http://placehold.it/350x250&text=10" alt="">
                <img class="owl-lazy" data-src="http://placehold.it/350x250&text=11" alt="">
            </div>
        </div>


        <br/>
        <ul class="actions">
            <li><a href="#" class="button special">Sign Up</a></li>
            <li><a href="#" class="button">Learn More</a></li>
        </ul>
    </section>

    {% block cta %}
        {{ parent() }}
    {% endblock %}

    {% block footer %}
        {{ parent() }}
    {% endblock %}

{% endblock %}

{% block javascripts %}

    {{ parent() }}

    <script type="text/javascript">
        $(document).ready(function () {
            $('body').attr('class', 'landing');
        });
    </script>

    <script type="text/javascript">
        var lat_1;
        var lng_1;
        var layer;
        var nearest_lat = lat_1;
        var nearest_lng = lng_1;
        //init_map
        var map = L.map('map', {
            layers: MQ.mapLayer()
        });

        L.tileLayer('http://{s}.tile.cloudmade.com/1cc75fcc8e2243d1b2f6aab1e5850be1/998/256/{z}/{x}/{y}.png', {
            attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="http://cloudmade.com">CloudMade</a>',
            maxZoom: 18
        }).addTo(map);
        //end of init_map

        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function (position) {
                lat_1 = position.coords.latitude;
                lng_1 = position.coords.longitude;

                show_points(lat_1, lng_1);
            });

            //geolocation
            map.locate({setView: true, maxZoom: 13});
            function onLocationFound(e) {
                var radius = e.accuracy / 2;

                L.marker(e.latlng).addTo(map)
                        .bindPopup("Vous êtes dans un rayon de " + radius + " mèters de ce point.").openPopup();

                L.circle(e.latlng, radius).addTo(map);
            }

            map.on('locationfound', onLocationFound);
            //end of geolocation
        } else {
            alert("Géolocalisation n'est pas supportée par votre navigateur. :(");
        }

        //points show_points
        function show_points(lat_1, lng_1) {
            var LeafIcon = L.Icon.extend({
                iconSize: [38, 95],
                iconAnchor: [22, 94],
                popupAnchor: [-3, -76]
            });
            var SOSVeloIcon = new LeafIcon({iconUrl: "{{ asset('bundles/sosvelotemplate/img/sosvelo/sosvelo_icon.png') }}"});

            var RedIcon = L.Icon.extend({
                iconSize: [38, 95],
                iconAnchor: [22, 94],
                popupAnchor: [-3, -76]
            });
            var redIcon = new RedIcon({iconUrl: "{{ asset('bundles/sosvelotemplate/img/sosvelo/marker_icon_red.png') }}"});
            var divIcon = L.divIcon({className: 'divIcon'});

            L.geoJson([points], {
                pointToLayer: function (feature, latLng) {
                    var lat_2 = latLng.lat;
                    var lng_2 = latLng.lng;
                    if (nearest_lat == undefined) {
                        nearest_lat = latLng.lat;
                        nearest_lng = latLng.lng;
                    }
                    if (latLng.distanceTo({
                                lat: lat_1,
                                lng: lng_1
                            }) < L.latLng(nearest_lat, nearest_lng).distanceTo({lat: lat_1, lng: lng_1})) {
                        nearest_lat = lat_2;
                        nearest_lng = lng_2;
                    }
                    {% if is_granted('ROLE_ADMIN') %}
                    if (feature.properties.activated) {
                        return L.marker(latLng, {
                            icon: SOSVeloIcon
                        }).bindPopup("SOSVélo : " + feature.properties.name + "<br> Adresse : " + feature.properties.adress + "<br> Infos : " + feature.properties.description + "<br><br><a href='#' onClick='routeToPoint(lat_1, lng_1, " + lat_2 + ", " + lng_2 + ")'>Aller à ce point</a><span class='space_80px'/><a href='#' onClick='deletePoint(" + feature.properties.id + ")'>Supprimer ce point.</a>");
                    }
                    else {
                        return L.marker(latLng, {
                            icon: redIcon
                        }).bindPopup("SOSVélo : " + feature.properties.name + "<br> Adresse : " + feature.properties.adress + "<br> Infos : " + feature.properties.description + "<br><br><a href='#' onClick='activatePoint(" + feature.properties.id + ")'>Activer ce point.</a><span class='space_80px'/><a href='#' onClick='deletePoint(" + feature.properties.id + ")'>Supprimer ce point.</a>");
                    }
                    {% else %}
                    if (feature.properties.activated) {
                        return L.marker(latLng, {
                            icon: SOSVeloIcon
                        }).bindPopup("SOSVélo : " + feature.properties.name + "<br> Adresse : " + feature.properties.adress + "<br> Infos : " + feature.properties.description + "<br><br><a href='#' onClick='routeToPoint(lat_1, lng_1, " + lat_2 + ", " + lng_2 + ")'>Aller à ce point</a>");
                    }
                    else {
                        return L.marker(latLng, {icon: divIcon});
                    }
                    {% endif %}
                }
            }).addTo(map);
        }
        //end of show_points

        //route
        function route(lat_1, lng_1, lat_2, lng_2) {
            if (layer != null)
                map.removeLayer(layer);

            dir = MQ.routing.directions();
            dir = MQ.routing.directions()
                    .on('success', function (data) {
                        var legs = data.route.legs,
                                html = '',
                                maneuvers,
                                i;

                        if (legs && legs.length) {
                            maneuvers = legs[0].maneuvers;

                            for (i = 0; i < maneuvers.length; i++) {
                                html += (i + 1) + '. ';
                                html += maneuvers[i].narrative + '<br />';
                            }

                            L.DomUtil.get('route-narrative').innerHTML = html;
                        }
                    });
            dir.route({
                locations: [
                    {latLng: {lat: lat_1, lng: lng_1}},
                    {latLng: {lat: lat_2, lng: lng_2}}
                ],
                options: {routeType: 'bicycle', locale: "fr_FR"}
            });
            layer = MQ.routing.routeLayer({
                directions: dir,
                fitBounds: true,
                locale: "fr_FR"
            });
            map.addLayer(layer);
        }
        //end of route
        //nearest
        function nearest() {
            route(lat_1, lng_1, nearest_lat, nearest_lng);
        }
        //end nearest
        //routeToPoint
        function routeToPoint(lat_1, lng_1, lat_2, lng_2) {
            route(lat_1, lng_1, lat_2, lng_2);
        }
        //end routeToPoint
        //deletePoint
        function deletePoint(id) {
            $.ajax({
                url: 'points/' + id,
                type: 'DELETE',
                success: function () {
                    alert("Point supprimé avec succès .");
                    window.location.href = "home";
                }
            });
        }
        //end deletePoint
        //activatePoint
        function activatePoint(id) {
            $.ajax({
                url: 'points/activate/' + id,
                type: 'POST',
                success: function () {
                    alert("Point activé avec succès .");
                    window.location.href = "home";
                }
            });
        }
        //end activatePoint
        var popup = L.popup();

        function onMapClick(e) {
            popup
                    .setLatLng(e.latlng)
                    .setContent("You clicked the map at " + e.latlng.toString())
                    .openOn(map);
        }

        map.on('click', onMapClick);
    </script>

{% endblock %}