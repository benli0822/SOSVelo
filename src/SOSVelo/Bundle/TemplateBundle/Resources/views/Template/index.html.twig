{# SOSVelo/Bundle/TemplateBundle/Resources/views/Template/index.html.twig #}

{% extends '@SOSVeloTemplate/layout.html.twig' %}

{% block title %}SOSVelo !{% endblock %}

{% block stylesheets %}
    {#<link rel="stylesheet" href="http://code.jquery.com/mobile/1.4.5/jquery.mobile.structure-1.4.5.css">#}

    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.css"/>

    <link href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css" rel="stylesheet">
    <link rel="stylesheet"
          href="//rawgithub.com/domoritz/leaflet-locatecontrol/gh-pages/dist/L.Control.Locate.min.css"/>
    <!--[if lt IE 9]>
    <link rel="stylesheet"
          href="//rawgithub.com/domoritz/leaflet-locatecontrol/gh-pages/dist/L.Control.Locate.ie.min.css"/>
    <![endif]-->

    <style>

        /*slider bar style*/
        .nearest, .nearest ul, .nearest li {
            list-style: none;
            display: block;
        }

        #tabs-1, #tabs-1 ul, #tabs-1 li {
            display: inline;
        }

        .nearest ol, #tabs-1 ol {
            padding: 0;
        }

        .nearest ul, #tabs-1 ul {
            padding: 0;
        }

        .nearest, #tabs-1, #tabs-2, #tabs-3, #tabs-4 {
            padding: 0 4px 0 0;
            margin: 0 20px 0 0;
        }

        .nearest > li, #tabs-1 > li {
            margin: 4px 0;
        }

        .nearest > li li, #tabs-1 > li li {
            margin: 2px 0;
        }

        .nearest ol li, #tabs-1 ol li {
            color: #333;
            outline: none;
            -webkit-border-radius: 4px;
            -moz-border-radius: 4px;
            text-decoration: none;
            border: 1px solid rgba(255, 255, 255, 255);
            border-radius: 6px;
            margin: 4px 0 4px 0
        }

        .nearest ol li:hover, .nearest ol li.active > a, #tabs-1 ol li:hover, #tabs-1 ol li.active > a {
            background-color: #5D5D5D;
            color: #f5f5f5;
        }

        .nearest ol li a, #tabs-1 ol li a {
            border: none;
        }

        .nearest ol li a:hover, .nearest ol li.active > a, #tabs-1 ol li a:hover, #tabs-1 ol li.active > a {
            background-color: transparent;
            color: #f5f5f5;
        }

        .nearest a, #tabs-1 a {
            color: #333;
            outline: none;
            -webkit-border-radius: 4px;
            -moz-border-radius: 4px;
            text-decoration: none;
            border: 1px solid rgba(255, 255, 255, 255);
            border-radius: 6px
        }

        .nearest li > a > span, #tabs-1 li > a > span {
            float: right;
            font-size: 19px;
            font-weight: bolder;
        }

        .nearest li > a:hover > span, #tabs-1 li > a:hover > span {
            color: #fff;
        }

        .nearest li > a > span:after, #tabs-1 li > a > span:after {
            content: '\25be';
        }

        .nearest li.open > a > span:after, #tabs-1 li.open > a > span:after {
            content: '\25b4';
        }

        .nearest a:hover, .nearest li.active > a, #tabs-1 a:hover, #tabs-1 li.active > a {
            background-color: #5D5D5D;
            color: #f5f5f5;
        }

        .nearest > li.active > a, #tabs-1 > li.active > a {
            background-color: #4D90FE;
        }

        .nearest li a, #tabs-1 li a {
            color: #ffffff;
            font-size: 20px;
            line-height: 18px;
            padding: 2px 10px;
        }

        .nearest > li > a, #tabs-1 > li > a {
            font-size: 14px;
            line-height: 20px;
            padding: 4px 10px;
        }

        /*make route detail scrollable*/
        #route-narrative {
            overflow: scroll;
            color: #ffffff;
            text-align: left;
        }

        /*spinner*/
        .sk-spinner-wordpress.sk-spinner {
            background-color: #333;
            width: 30px;
            height: 30px;
            border-radius: 30px;
            position: relative;
            margin: 0 auto;
            -webkit-animation: sk-innerCircle 1s linear infinite;
            animation: sk-innerCircle 1s linear infinite;
        }

        .sk-spinner-wordpress .sk-inner-circle {
            display: block;
            background-color: #fff;
            width: 8px;
            height: 8px;
            position: absolute;
            border-radius: 8px;
            top: 5px;
            left: 5px;
        }

        @-webkit-keyframes sk-innerCircle {
            0% {
                -webkit-transform: rotate(0);
                transform: rotate(0);
            }
            100% {
                -webkit-transform: rotate(360deg);
                transform: rotate(360deg);
            }
        }

        @keyframes sk-innerCircle {
            0% {
                -webkit-transform: rotate(0);
                transform: rotate(0);
            }
            100% {
                -webkit-transform: rotate(360deg);
                transform: rotate(360deg);
            }
        }
    </style>
{% endblock %}


{% block noscriptstylesheets %}
    {{ parent() }}
{% endblock %}

{% block body %}
    {% block menu %}
        {{ parent() }}
    {% endblock %}
    <!-- Banner -->
    <section id="banner">
        <h2>SOSVélo</h2>

        <p>Finding your appropriate service point at SOSVélo</p>

        <form>
            <div class="row uniform 50%">
                <div class="7u -1u 12u(3)">
                    <input type="text" name="search" id="search" placeholder="Search your point"/>
                </div>
                <div class="1u 12(3)">
                    <select name="type" id="type">
                        <option>Name</option>
                        <option>Service Type</option>
                        <option>Address</option>
                    </select>
                </div>
                <div class="1u 2u(3) align-center">
                    <input type="submit" value="Search" class="fit"/>
                </div>
            </div>
        </form>

        <div class="row uniform 0%">
            <div class="8u 12u(2)">
                <div id="map" class="map"></div>
            </div>
            <div class="4u 12u(2)">


                <div class="nearest">
                    <div class="loading">
                        <div class="sk-spinner sk-spinner-wordpress">
                            <span class="sk-inner-circle"></span>
                        </div>

                        <h3>Loading</h3>
                    </div>

                    <ol id="nearest">
                    </ol>

                    <div class="route" style="display: none;">

                        <div id="tabs-1">
                            <ul>
                                <li><a href="#tabs-2">Route</a></li>
                                <li><a href="#tabs-3">Comments</a></li>
                            </ul>
                            <div id="tabs-2">
                                <br/>

                                <div class="loading">
                                    <div class="sk-spinner sk-spinner-wordpress">
                                        <span class="sk-inner-circle"></span>
                                    </div>

                                    <h3>Loading</h3>
                                </div>

                                <div id="route-narrative"></div>

                            </div>
                            <div id="tabs-3">

                                <div class="loading">
                                    <div class="sk-spinner sk-spinner-wordpress">
                                        <span class="sk-inner-circle"></span>
                                    </div>

                                    <h3>Loading</h3>
                                </div>

                                <div class="slider-dev">

                                    <div>
                                        {% if currentPath in "home" %}

                                            {% include 'FOSCommentBundle:Thread:async.html.twig' with { 'id' : currentPath } %}
                                            <div id="fos_comment_thread" data-thread="{{ thread.id }}">

                                                {% include 'FOSCommentBundle:Thread:comments.html.twig' with {
                                                'comments': comments,
                                                'thread': thread
                                                } %}

                                            </div>
                                        {% endif %}
                                    </div>
                                </div>
                            </div>
                        </div>

                        <a class="button" id="return">Return</a>
                    </div>
                </div>


            </div>
        </div>

        <br/>
        <ul class="actions">
            <li><a href="{{ path("fos_user_registration_register") }}" class="button special">Sign Up</a></li>
            <li><a href="{{ path("sosvelo_template_template_generic") }}" class="button">Learn More</a></li>
        </ul>
    </section>

    {% block cta %}
        {{ parent() }}
    {% endblock %}

    {% block footer %}
        {{ parent() }}
    {% endblock %}

{% endblock %}

{% block javascripts %}

    {{ parent() }}

    <script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>
    {#<script src="http://code.jquery.com/mobile/1.4.5/jquery.mobile-1.4.5.min.js"></script>#}
    <script src="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.js"></script>
    <script src="http://open.mapquestapi.com/sdk/leaflet/v1.s/mq-map.js?key=Fmjtd%7Cluurn96an9%2Cas%3Do5-9w8554"></script>
    <script src="http://open.mapquestapi.com/sdk/leaflet/v1.s/mq-routing.js?key=Fmjtd%7Cluurn96an9%2Cas%3Do5-9w8554 "></script>
    <script src="//rawgithub.com/domoritz/leaflet-locatecontrol/gh-pages/dist/L.Control.Locate.min.js"></script>
    <script src="{{ path("sosvelo_point_point_getgeojsonpoints") }}"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            $('body').attr('class', 'landing');

            $("#tabs-1").tabs();

            $("#route-narrative").scroll();

            $("#return").click(function () {
                $("#nearest").show();
                $(".route").hide();
                $("#route-narrative").empty();
            });
        });

        var lat_1;
        var lng_1;
        var layer;
        var nearest_lat = lat_1;
        var nearest_lng = lng_1;
        var markers = [];
        //init_map
        var map = L.map('map', {
            layers: MQ.mapLayer()
        });


        L.tileLayer('http://{s}.tile.cloudmade.com/1cc75fcc8e2243d1b2f6aab1e5850be1/998/256/{z}/{x}/{y}.png', {
            attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="http://cloudmade.com">CloudMade</a>',
            maxZoom: 18
        }).addTo(map);
        //        end of init_map

        // domoritz/leaflet-locatecontrol => show current position
        L.control.locate().addTo(map);

        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function (position) {
                lat_1 = position.coords.latitude;
                lng_1 = position.coords.longitude;

                show_points(lat_1, lng_1);
                sort_points(lat_1, lng_1);
            });

            //geolocation
            map.locate({setView: true, maxZoom: 13});
            function onLocationFound(e) {
                var radius = e.accuracy / 2;

                L.marker(e.latlng, {
                    title: "location"
                }).addTo(map).bindPopup("Vous êtes dans un rayon de " + radius + " mèters de ce point.").openPopup();

                L.circle(e.latlng, radius).addTo(map);

//                $(".slider-dev").hide();
                $(".loading").hide();
            }

            map.on('locationfound', onLocationFound);
            //end of geolocation
        } else {
            alert("Géolocalisation n'est pas supportée par votre navigateur. :(");
        }

        // sort point by distance to current position
        var sortRes = [];
        function sort_points(lat_1, lng_1) {
            // sort by distance to current position
            sortRes.sort(function (d1, d2) {
                return d1.distance == d2.distance ? 0 :
                        d1.distance > d2.distance ? 1 : -1;
            });
            console.log(sortRes);

            // display as carousel
            for (var i = 0; i < 5; i++) {
                var $newli = $("<li></li>");
                var $newa = $("<a href='javascript:void(0)' " +
                "onclick='route(" + lat_1 + "," + lng_1 + "," + sortRes[i]['lat'] + "," + sortRes[i]['lng'] + ")'" +
                "id='" + sortRes[i]['feature']['properties']['name'] + "'></a>");
                var $newdiv = $("<div class='row uniform 50%'></div>");
                var $newinfo = $("<div class='8u 12u(2)'>" +
                sortRes[i]['feature']['properties']['name'] + "<br/><h6>" + sortRes[i]['feature']['properties']['address'] +
                "</h6></div>");
                var $newdist = $("<div class='4u 12u(2)'><h5>" + (sortRes[i]['distance'] / 1000).toFixed(2) + " km</h5></div>");

                $newdiv.append($newinfo);
                $newdiv.append($newdist);
                $newa.append($newdiv);
                $newli.append($newa);
                $("#nearest").append($newli);
            }
//            $("#nearest").listview('refresh');
        }
        // end sort_points

        //points show_points
        function show_points(lat_1, lng_1) {
            var LeafIcon = L.Icon.extend({
                iconSize: [38, 95],
                iconAnchor: [22, 94],
                popupAnchor: [-3, -76]
            });
            var SOSVeloIcon = new LeafIcon({iconUrl: "{{ asset('bundles/sosvelotemplate/img/sosvelo/sosvelo_icon.png') }}"});

            var RedIcon = L.Icon.extend({
                iconSize: [38, 95],
                iconAnchor: [22, 94],
                popupAnchor: [-3, -76]
            });
            var redIcon = new RedIcon({iconUrl: "{{ asset('bundles/sosvelotemplate/img/sosvelo/marker_icon_red.png') }}"});
            var divIcon = L.divIcon({className: 'divIcon'});

            L.geoJson([points], {
                pointToLayer: function (feature, latLng) {
                    var lat_2 = latLng.lat;
                    var lng_2 = latLng.lng;
                    if (nearest_lat == undefined) {
                        nearest_lat = latLng.lat;
                        nearest_lng = latLng.lng;
                    }

                    // push record to list for sorting
                    var record = {
                        'feature': feature,
                        'lat': latLng.lat,
                        'lng': latLng.lng,
                        'distance': latLng.distanceTo({
                            lat: lat_1,
                            lng: lng_1
                        })
                    };
                    sortRes.push(record);

                    if (latLng.distanceTo({
                                lat: lat_1,
                                lng: lng_1
                            }) < L.latLng(nearest_lat, nearest_lng).distanceTo({lat: lat_1, lng: lng_1})) {
                        nearest_lat = lat_2;
                        nearest_lng = lng_2;
                    }
                    {% if is_granted('ROLE_ADMIN') %}
                    if (feature.properties.activated) {
                        var marker = L.marker(latLng, {
                            icon: SOSVeloIcon
                        }).bindPopup("SOSVélo : " + feature.properties.name + "<br> Address : " + feature.properties.address + "<br> Infos : " + feature.properties.description + "<br><br><a href='#' onClick='routeToPoint(lat_1, lng_1, " + lat_2 + ", " + lng_2 + ")'>Aller à ce point</a><span class='space_80px'/><a href='#' onClick='deletePoint(" + feature.properties.id + ")'>Supprimer ce point.</a>");
                        markers.push(marker);
                        return marker;
                    }
                    else {
                        var marker = L.marker(latLng, {
                            icon: redIcon,
                            title: feature.properties.name
                        }).bindPopup("SOSVélo : " + feature.properties.name + "<br> Adrdess : " + feature.properties.address + "<br> Infos : " + feature.properties.description + "<br><br><a href='#' onClick='activatePoint(" + feature.properties.id + ")'>Activer ce point.</a><span class='space_80px'/><a href='#' onClick='deletePoint(" + feature.properties.id + ")'>Supprimer ce point.</a>");
                        markers.push(marker);
                        return marker;
                    }
                    {% else %}
                    if (feature.properties.activated) {
                        var marker = L.marker(latLng, {
                            icon: SOSVeloIcon
                        }).bindPopup("SOSVélo : " + feature.properties.name + "<br> Address : " + feature.properties.address + "<br> Infos : " + feature.properties.description + "<br><br><a href='#' onClick='routeToPoint(lat_1, lng_1, " + lat_2 + ", " + lng_2 + ")'>Aller à ce point</a>");
                        markers.push(marker);
                        return marker;
                    }
                    else {
                        var marker = L.marker(latLng, {icon: divIcon});
                        markers.push(marker);
                        return marker;
                    }
                    {% endif %}
                }
            }).addTo(map);
        }
        //end of show_points

        //marker function to open the corresponding popup
        function markerFunction(id) {
            for (var i in markers) {
                var markerID = markers[i].options.title;
                if (markerID == id) {
                    console.log(markers[i]);
                    markers[i].openPopup();
                }
            }
        }

        //route
        function route(lat_1, lng_1, lat_2, lng_2) {
            if (layer != null)
                map.removeLayer(layer);

            dir = MQ.routing.directions();
            dir = MQ.routing.directions()
                    .on('success', function (data) {
                        var legs = data.route.legs,
                                html = '',
                                maneuvers,
                                i;

                        if (legs && legs.length) {
                            maneuvers = legs[0].maneuvers;

                            for (i = 0; i < maneuvers.length; i++) {
                                html += (i + 1) + '. ';
                                html += maneuvers[i].narrative + '<br />';
                            }

                            L.DomUtil.get('route-narrative').innerHTML = html;
                        }
                    });
            dir.route({
                locations: [
                    {latLng: {lat: lat_1, lng: lng_1}},
                    {latLng: {lat: lat_2, lng: lng_2}}
                ],
                options: {routeType: 'bicycle', locale: "fr_FR"}
            });
            layer = MQ.routing.routeLayer({
                directions: dir,
                fitBounds: true,
                locale: "fr_FR"
            });
            map.addLayer(layer);

            $("#nearest").hide();
            $(".route").show();
            // open the corresponding popup
//            $("a").click(function () {
//                console.log($(this)[0].id);
//                markerFunction($(this)[0].id);
//            });
            $("#route-narrative").show("slide", {direction: "left"}, 1500);
        }
        //end of route
        //nearest
        function nearest() {
            route(lat_1, lng_1, nearest_lat, nearest_lng);
        }
        //end nearest
        //routeToPoint
        function routeToPoint(lat_1, lng_1, lat_2, lng_2) {
            route(lat_1, lng_1, lat_2, lng_2);
        }
        //end routeToPoint
        //deletePoint
        function deletePoint(id) {
            $.ajax({
                url: 'points/' + id,
                type: 'DELETE',
                success: function () {
                    alert("Point supprimé avec succès .");
                    window.location.href = "home";
                }
            });
        }
        //end deletePoint
        //activatePoint
        function activatePoint(id) {
            $.ajax({
                url: 'points/activate/' + id,
                type: 'POST',
                success: function () {
                    alert("Point activé avec succès .");
                    window.location.href = "home";
                }
            });
        }

        // responsive design for map, resize the map according to the current window's size
        $(window).on("resize", function () {
            $("#map").height($(window).height() / 1.5).width($(this).parent().width());
//            map.invalidateSize();
            $("#route-narrative").height($(window).height() / 1.8).width($(this).parent().width());
        }).trigger("resize");
    </script>

{% endblock %}
